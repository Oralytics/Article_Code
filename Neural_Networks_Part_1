-- create the settings table for a Neural Network model
CREATE TABLE demo_Neural_Network_settings 
( setting_name  VARCHAR2(30),
  setting_value VARCHAR2(4000));

-- insert the settings records for a Neural Network
-- ADP is turned on. By default ADP is turned off.
BEGIN
  INSERT INTO demo_neural_network_settings (setting_name, setting_value)
  values (dbms_data_mining.algo_name, dbms_data_mining.algo_neural_network);
	
  INSERT INTO demo_neural_network_settings (setting_name, setting_value)
  VALUES (dbms_data_mining.prep_auto, dbms_data_mining.prep_auto_on);
END;


BEGIN
   DBMS_DATA_MINING.CREATE_MODEL(
      model_name          => 'DEMO_NEURAL_NETWORK_MODEL',
      mining_function     => dbms_data_mining.classification,
      data_table_name     => 'mining_data_build_v',
      case_id_column_name => 'cust_id',
      target_column_name  => 'affinity_card',
      settings_table_name => 'demo_neural_network_settings');
END;

-- View machine learning models
SELECT model_name, 
       algorithm, 
       build_duration, 
       model_size 
FROM USER_MINING_MODELS
WHERE mining_function = 'CLASSIFICATION';

-- View model settings
SELECT setting_name, 
       setting_value, 
       setting_type 
FROM  USER_mining_model_settings 
WHERE model_name = 'DEMO_NEURAL_NETWORK_MODEL';


-- View model attributes
SELECT attribute_name, 
       attribute_type, 
       usage_type, 
       target 
from  USER_mining_model_attributes 
where model_name = 'DEMO_NEURAL_NETWORK_MODEL';  




CREATE OR REPLACE VIEW demo_nnet_test_results
AS
SELECT cust_id,
       prediction(DEMO_NEURAL_NETWORK_MODEL USING *)  predicted_value,
       prediction_probability(DEMO_NEURAL_NETWORK_MODEL USING *) probability
FROM   mining_data_test_v;


DECLARE
   v_accuracy NUMBER;
BEGIN
   DBMS_DATA_MINING.COMPUTE_CONFUSION_MATRIX (
      accuracy 			    => v_accuracy,
      apply_result_table_name	    => 'demo_nnet_test_results',
      target_table_name 	    => 'mining_data_test_v',
      case_id_column_name 	    => 'cust_id',
      target_column_name 	    => 'affinity_card',
      confusion_matrix_table_name => 'demo_nnet_confusion_matrix',
      score_column_name 	    => 'PREDICTED_VALUE',
      score_criterion_column_name => 'PROBABILITY',
      cost_matrix_table_name	    => null,
      apply_result_schema_name    => null,
      target_schema_name 	    => null,
      cost_matrix_schema_name     => null,
      score_criterion_type 	    => 'PROBABILITY');
   DBMS_OUTPUT.PUT_LINE('**** MODEL ACCURACY ****: ' || ROUND(v_accuracy,4));
END;


-- Using the Neural Network to label data (make a prediction)
SELECT cust_id, affinity_card,
       PREDICTION(DEMO_NEURAL_NETWORK_MODEL USING *) Predicted_Value,
       PREDICTION_PROBABILITY(DEMO_NEURAL_NETWORK_MODEL USING *) Prob
FROM   mining_data_apply_v
WHERE  rownum <= 8;


-- What-if analysis using the Machine Learning model
SELECT prediction(DEMO_NEURAL_NETWORK_MODEL
           USING 'F' AS cust_gender, 
                 62 AS age, 
      'Widowed' AS cust_marital_status, 
           'Exec.' as occupation, 
           2 as household_size, 
           3 as yrs_residence)  Predicted_Value,
       prediction_probability(DEMO_NEURAL_NETWORK_MODEL, 0
           USING 'F' AS cust_gender, 
                 62 AS age, 
      'Widowed' AS cust_marital_status, 
           'Exec.' as occupation, 
           2 as household_size, 
           3 as yrs_residence) Predicted_Prob
FROM dual;


-- Prediction Insights of the Neural Network
SELECT cust_id, affinity_card,
       PREDICTION(DEMO_NEURAL_NETWORK_MODEL USING *) Predicted_Value,
       PREDICTION_PROBABILITY(DEMO_NEURAL_NETWORK_MODEL USING *) Prob,
       PREDICTION_DETAILS(DEMO_NEURAL_NETWORK_MODEL USING *) Pred_Details
FROM   mining_data_apply_v
WHERE  rownum <= 8;

